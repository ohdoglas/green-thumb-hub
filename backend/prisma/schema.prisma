
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId           Int             @id @default(autoincrement())
  email            String          @unique
  password         String
  username         String          @unique
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt
  loginAttempts    LoginAttempt[]
  confirmationToken String?        @unique
  isConfirmed      Boolean         @default(false)
  lockUntil        DateTime?

  userProfile      UserProfile?    // Relacionamento opcional com UserProfile
}

model LoginAttempt {
  id             Int       @id @default(autoincrement())
  userId         Int
  ipAddress      String?   @db.VarChar(45)
  attemptTime    DateTime  @default(now())
  success        Boolean
  failedAttempts Int       @default(0)
  lockUntil      DateTime?

  user           User      @relation(fields: [userId], references: [userId])

  @@index([userId])
}

model UserProfile {
  profileId       Int       @id @default(autoincrement())
  userId          Int       @unique
  profilePicture  String?   @db.VarChar(255) // URL ou caminho para a foto do perfil
  bio             String?   @db.Text         // Biografia ou descrição do usuário
  preferences     Json?     // Preferências do usuário armazenadas em formato JSON
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt

  user            User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([userId])
}

